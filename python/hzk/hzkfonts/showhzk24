#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys

chars = sys.argv[1]
chars = chars.decode("utf-8").encode("gb2312")

def bin(num):
    assert type(num) == int, Exception("int type require")
    assert num >= 0, Exception("need bigger than zero")
    assert num < 256, Exception("only accept 1 Byte number")
    
    res = []
    while num > 1:
        res.append(str(num % 2))
        num = num / 2
    res.append(str(num))
    for i in range(8-len(res)):
        res.append('0')
    res.reverse()
    res_s = ''.join(res)
    return res_s

def queryChar(s):
    ##print repr(s)
    fontfile = 'HZK24H'
    qh = ord(s[0])-160 - 15     ## 真阴险
    wh = ord(s[1])-160
    offset = ( (qh-1)*94 + wh - 1) * 72
    fp = open(fontfile, 'rb')
    fp.seek(offset)
    data = fp.read(72)
    res = []
    for i in range(72):
        res.append(bin(ord(data[i])))

    s = ''.join(res)
    s = s.replace('1', '+')
    s = s.replace('0', ' ')

    for y in range(24):
        x_sets = [x for x in range(24)]
        x_sets = map(lambda x: x*24+y, x_sets)
        x_str = map(lambda n: s[n], x_sets)
        print ''.join(x_str)

for i in range(0, len(chars), 2):
    queryChar(chars[i:i+2])

